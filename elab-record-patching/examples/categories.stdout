<stdin> : Type :=
  let Category : Type :=
    {
      Ob : Type;
      Hom : fun (_ : { S : Ob; T : Ob }) -> Type;
      id : fun (A : Ob) -> Hom { S := A; T := A };
      seq :
        fun (A : Ob) (B : Ob) (C : Ob) (f : Hom { S := A; T := B })
            (g : Hom { S := B; T := C }) -> Hom { S := A; T := C }
    };
  let types : Category :=
    {
      Ob := Type;
      Hom :=
        fun (params : { S : Type; T : Type }) =>
          fun (_ : params.S) -> params.T;
      id := fun (A : Type) (a : A) => a;
      seq :=
        fun (A : Type) (B : Type) (C : Type) (f : fun (_ : A) -> B)
        (g : fun (_ : B) -> C) (a : A) =>
          g (f a)
    };
  Type
