let id : [a] -> a -> a := fun [a] => fun (x : a) => x;
let always : [a] -> a -> [b] -> b -> a :=
  fun [a] => fun (x : a) => fun [b] => fun (y : b) => x;
let _ : Int := id [Int] 3;
let _ : [a] -> a -> a := fun [$a] => id [$a -> $a] (id [$a]);
let _ : [a] -> a -> a :=
  always [[a] -> a -> a] (fun [$a] => id [$a]) [Int] 3;
let test : ([a] -> a -> a) -> [a] -> a -> a :=
  fun (f : [a] -> a -> a) =>
    let _ : Int := f [Int] 3;
    let _ : Bool := f [Bool] true;
    fun [$a] => f [$a -> $a] (f [$a]);
test (fun [$a] => fun (x : $a) => x) : [a] -> a -> a
